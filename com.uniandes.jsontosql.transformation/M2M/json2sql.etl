pre {
	("Iniciando transformaci√≥n de JSon a Sql").println();
	 var mergedField = CONFIG!MergedField;
}

rule Document2Database
	transform doc: JSON!Document
	to db: DB!Database{
		db.name = "databaseTest";
		"Objects: ".print();
	 	var objs = doc.objects.select(e|e.isTypeOf(JSON!Object)).println();
	 	db.tables = objs.equivalent("Object2Table");
	}
		

@lazy
rule Object2Table
	transform obj: JSON!Object
	to tb: DB!Table{
		"ValueObject: ".print();
		var objPrimarios = obj.pairs.value.println();
		objPrimarios.equivalent("ValueObject2Table");
	}
	
@lazy
rule ValueObject2Table
	transform obj: JSON!ValueObject
	to config: CONFIG!MergedField, tb: DB!Table{
		mergedField = config;
		"obj.value.pairs: ".print();
		obj.value.pairs.println();
		obj.value.pairs.select(e|e.name.MergeFieldChecker());
		--tb.column = fieldChecker(obj.pair);	    
	}
	
operation String MergeFieldChecker(){
	self;
	var field = mergedField.attributeNames.select(e|e.AttributeName.println());
	 --field.attributeNames.size().println();
	return null;
}