pre {
	 var config = CONFIG!Config;
	 var DataBase =  DB!Database;
}
--This Rule is creating and extra empty database
rule Config2Database
	transform c: CONFIG!Config
	to 	db: DB!Database{
		config = c ;
	}	

rule Document2Database
	transform doc: JSON!Document
	to db: DB!Database{	
		DataBase = db;
		db.name = "databaseTest";
	 	var objs = doc.objects.select(e|e.isTypeOf(JSON!Object));
	 	for(obj in objs){
	 		for(pair in obj.pairs){
	 			if(db.tables.size()==0){
	 				var table = obj.pairs[0].value.equivalent("ValueObject2Table"); 
	 				db.tables.add(table);
	 			}
 			}
	 	}
	}


@lazy
rule Object2Table
	transform obj: JSON!Object
	to tb: DB!Table{
		var objPrimarios = obj.pairs.value;
		objPrimarios.equivalent("ValueObject2Table");
	}
	
@lazy
rule ValueObject2Table
	transform obj: JSON!ValueObject
	to tb: DB!Table{
		tb.name = obj.eContainer().name.MergeFieldChecker();
		//System.out.println("tb.name: "+ tb.name);
		tb.columns = obj.value.pairs.equivalent("Pair2Column");
	}

@lazy
rule ArrayValue2Table
	transform a: JSON!ArrayValue
	to tb: DB!Table{
		tb.name = a.eContainer().name.MergeFieldChecker();
		tb.columns = a.values[0].value.pairs.equivalent("Pair2Column");
	}

@lazy
rule Pair2Column
	transform p: JSON!Pair
	to col: DB!Column{
		//Here MergeFieldChecker has to be called to change the name of the column.
		//System.out.println("p.name: "+ p.name);
		col.name = p.name.MergeFieldChecker();
		//System.out.println("col.name: "+ col.name);
		if(p.value.isTypeOf(JSON!StringValue)){
			col.type = DB!DataType#varchar;
		}else if(p.value.isTypeOf(JSON!NumberValue)){
			col.type = DB!DataType#int;
		}else if(p.value.isTypeOf(JSON!DecimalValue)){
			col.type = DB!DataType#decimal;
		}else if(p.value.isTypeOf(JSON!ArrayValue)){
			//El no sabe que es db, buscar una forma de que la tabla que sale de la trasnformacion ArrayValue2Table se asgine a la "main" database.
			 DataBase.tables.add(p.value.equivalent("ArrayValue2Table"));
		}else{
			col.type = DB!DataType#unknown;
		}
	}
	
operation String MergeFieldChecker(){	
	var finalField = self;
	"".println();
	System.out.println("MergeField from: "+ self);

	for(attrNames in config.mergeFields.attributeNames){
		for(attrName in attrNames){
			if(attrName.oldField == self){
				finalField = attrName.finalField.name;
			}
		}
	}
	System.out.println("MergeField to: "+ finalField);
	return finalField;	
}
